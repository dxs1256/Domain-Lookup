name: 提取 IP、解析域名和验证域名可用性

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 */4 * * *'

permissions:
  contents: write
  actions: write

jobs:
  Domain-Lookup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # =============== 1. 从 wetest.vip 提取 Cloudflare 优选 IP ===============
      - name: Fetch Cloudflare IPs
        run: |
          URL="https://www.wetest.vip/page/cloudflare/address_v4.html"
          curl -s "$URL" | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | sort -u > Fission_ip.txt
          echo "Extracted IPs:"
          cat Fission_ip.txt

      - name: Commit IP File
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Fission_ip.txt
          git commit -m "Update Fission_ip.txt with latest Cloudflare IPs"
          git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main

      # =============== 2. 运行 Fission.py ===============
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Fission.py
        run: |
          python Fission.py

      - name: Commit Results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Fission_domain.txt Fission_ip.txt dns_result.txt
          git commit -m "Update results from Fission.py"
          git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main

      # =============== 3. 验证域名可用性（只保留 200 响应的域名） ===============
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false  # 避免 go.sum 警告

      - name: Install httpx
        run: |
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Check Domains with httpx
        run: |
          # 确保只处理域名（再次过滤 IP，双重保险）
          grep -vE '^([0-9]{1,3}\.){3}[0-9]{1,3}$' Fission_domain.txt | \
          httpx -silent -mc 200 -json | \
          jq -r '.host' | \
          grep -vE '^([0-9]{1,3}\.){3}[0-9]{1,3}$' | \
          sort -u > Last-domain.txt

      - name: Commit Final Domains
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -s Last-domain.txt ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add Last-domain.txt
            git commit -m "Update Last-domain.txt with live domains (HTTP 200 only)"
            git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
          fi

      # =============== 4. 清理 ===============
      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 2
          keep_minimum_runs: 0
