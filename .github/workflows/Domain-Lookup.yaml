name: 提取 IP、解析域名和验证域名可用性

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 */4 * * *'

permissions:
  contents: write
  actions: write

jobs:
  Domain-Lookup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # =============== 1. 提取优选 IP（使用静态源，避免动态渲染问题） ===============
      - name: Fetch Cloudflare IPs from wetest.vip (Static Extraction)
        run: |
          URL="https://www.wetest.vip/page/cloudflare/address_v4.html"
          echo -n > Fission_ip.txt
          # 使用 curl + grep + awk 提取 IP（该页面是静态 HTML！）
          curl -s "$URL" | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n 10 | sort -u > Fission_ip.txt
          cat Fission_ip.txt
          if [ -s Fission_ip.txt ]; then
            echo "ip_file_updated=true" >> $GITHUB_OUTPUT
          else
            echo "No IPs found!" >&2
            exit 1
          fi
        id: fetch_ip

      - name: Commit IP File
        if: steps.fetch_ip.outputs.ip_file_updated == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Fission_ip.txt
          git commit -m "Update Fission_ip.txt with latest Cloudflare IPs"
          git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main

      # =============== 2. 运行 Fission.py ===============
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Fission.py
        run: |
          python Fission.py

      - name: Commit Domain and IP Results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Fission_domain.txt Fission_ip.txt dns_result.txt
          if ! git diff --quiet; then
            git commit -m "Update results from Fission.py"
            git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
          fi

      # =============== 3. 验证域名可用性 ===============
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install httpx
        run: |
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Check Domains with httpx
        run: |
          touch Last-domain.txt
          if [ -s Fission_domain.txt ]; then
            cat Fission_domain.txt | httpx -silent -mc 200 -json | jq -r '.host' | sort -u > Last-domain.txt
          fi

      - name: Commit Final Domains
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -s Last-domain.txt ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add Last-domain.txt
            git commit -m "Update Last-domain.txt with live domains"
            git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
          fi

      # =============== 4. 清理 ===============
      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 2
          keep_minimum_runs: 0
